@charset "utf-8";
html {
  font-family: sans-serif;
  font-size: 200%;
  transition: all 1s;
}

/*paragraph text*/
#blastoff {
  height: 61.8px;
}

/*clock properties*/
.kcolc {
  width: 618px;
  height: 618px;
  border-radius: 50%;
  left: 31.415%;
  border: 2px solid black;
  position: relative;
}

/*clock number properties*/
/*transform calls CSS rotate function: beginning at 0deg, changes CSS --rotation variable by each .counter# --rotation value*/
.kcolc .counter {
  --rotation: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  transform: rotate(var(--rotation));
}

.kcolc .counter1 {
  --rotation: 40deg;
}
.kcolc .counter2 {
  --rotation: 80deg;
}
.kcolc .counter3 {
  --rotation: 120deg;
}
.kcolc .counter4 {
  --rotation: 160deg;
}
.kcolc .counter5 {
  --rotation: 200deg;
}
.kcolc .counter6 {
  --rotation: 240deg;
}
.kcolc .counter7 {
  --rotation: 280deg;
}
.kcolc .counter8 {
  --rotation: 320deg;
}
.kcolc .counter9 {
  --rotation: 360deg;
}

/*clock hand: uses CSS custom properties (variables via --) to change rotation and height property*/
/*transform calls CSS rotate function: changes CSS --rotation variable when JS timeTurner function called*/
/*transform calls CSS height function: changes CSS --height variable when JS logarithm function called*/
.kcit {
  --rotation: 1;
  --height: 1;
  position: absolute;
  bottom: 50%;
  left: 50%;
  width: 5px;
  height: 40%;
  background-color: greenyellow;
  transform-origin: bottom;
  z-index: -1;
  transform: rotate(calc(var(--rotation) * 1deg)) scaleY(calc(var(--height)));
}

/*sets initial reset button opacity to 0 (invisible)*/
#reset {
  opacity: 0;
}
